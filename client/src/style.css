/* client/style.css */

/* Remove the original :root block with hardcoded colors */
/* Remove the @media (prefers-color-scheme: light) block */

/* --- Apply YOUR variables --- */

/* Apply base font and background/text colors FROM your ThemeManager */
body {
  font-family: var(--font-family-secondary); /* Or --font-family-primary */
  background-color: var(--color-background-primary);
  color: var(--color-text-primary);

  /* Keep layout stuff if desired, but positioning might change based on your app structure */
  margin: 0;
  /* display: flex; */ /* Often remove these defaults unless your root layout IS flex */
  /* place-items: center; */
  /* min-width: 320px; */ /* Usually okay */
  min-height: 100vh;

  /* Add base typography from variables */
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  font-weight: var(--font-weight-normal);

  /* Add default transitions if desired */
  transition: background-color var(--transition-timing-normal) ease, color var(--transition-timing-normal) ease;

  /* Remove default Vite font smoothing if using custom fonts extensively */
  /* font-synthesis: none; */
  /* text-rendering: optimizeLegibility; */
  /* -webkit-font-smoothing: antialiased; */
  /* -moz-osx-font-smoothing: grayscale; */
}

a {
  font-weight: var(--font-weight-medium); /* Use variable */
  color: var(--color-text-link); /* Use variable */
  text-decoration: none; /* Remove default 'inherit' */
  transition: color var(--transition-timing-fast) ease;
}
a:hover {
  color: var(--color-text-link-hover); /* Use variable */
  text-decoration: underline;
}
/* Add focus styles */
a:focus-visible {
  outline: var(--focus-ring-width) solid var(--color-focus);
  outline-offset: var(--focus-ring-offset);
  border-radius: var(--border-radius-sm);
}


h1 {
  font-size: var(--font-size-4xl); /* Use variable */
  line-height: var(--line-height-tight); /* Use variable */
  font-weight: var(--font-weight-bold); /* Use variable */
  color: var(--color-text-primary); /* Ensure color uses variable */
}

/* You might want a more specific container */
#app {
  max-width: var(--container-max-width); /* Use variable */
  margin: 0 auto;
  padding: var(--spacing-8); /* Use variable */
  text-align: center; /* Keep if desired */
}

/* Style buttons using variables */
button {
  border-radius: var(--border-radius-md); /* Use variable */
  border: var(--border-width-1) solid transparent; /* Keep transparent or use border variable */
  padding: var(--padding-button); /* Use variable */
  font-size: var(--font-size-base); /* Use variable */
  font-weight: var(--font-weight-medium); /* Use variable */
  font-family: var(--font-family-primary); /* Use variable */
  background-color: var(--color-button-primary-bg); /* Use variable */
  color: var(--color-button-primary-text); /* Use variable */
  cursor: pointer;
  transition: border-color var(--transition-timing-fast) ease, background-color var(--transition-timing-fast) ease;
  height: var(--button-height-md); /* Use variable */
}
button:hover {
  /* Define hover state - might need to adjust based on theme */
  background-color: var(--color-primary-light); /* Example */
  /* border-color: var(--color-primary); */ /* Example */
}
body.dark-mode button:hover {
  background-color: var(--color-primary-dark); /* Example */
}

button:focus-visible {
  outline: var(--focus-ring-width) solid var(--color-focus);
  outline-offset: var(--focus-ring-offset);
  border-color: transparent; /* Hide default border on focus if using outline */
}

/* Remove or adapt other default styles like .logo, .card, .read-the-docs
   using your component structure and CSS variables */
.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
/* etc. */